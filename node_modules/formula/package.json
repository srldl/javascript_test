{
  "name": "formula",
  "version": "0.0.2-beta2",
  "description": "Basic formulas interpreter.",
  "main": "formula.js",
  "directories": {
    "example": "examples"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bfontaine/FormulaJS.git"
  },
  "files": [
    "formulalib.js",
    "formula.js",
    "formula-cli.js"
  ],
  "bin": {
    "formula": "./formula-cli.js"
  },
  "bugs": {
    "url": "https://github.com/bfontaine/FormulaJS/issues"
  },
  "keywords": [
    "formula",
    "maths"
  ],
  "homepage": "https://github.com/bfontaine/FormulaJS#readme",
  "author": {
    "name": "Baptiste Fontaine"
  },
  "license": "MIT",
  "readme": "FormulaJS\n=========\n\nThis is an interpreter for basic formulas, based on an original idea by\n[@tsalmon](//github.com/tsalmon/mybadmaths).\n\nInstall\n-------\n\n```sh\n(sudo) npm install formula    # local\n(sudo) npm install -g formula # global\n```\n\nUsage\n-----\n\n```sh\nformula <file>\n```\n\nFeatures\n--------\n\n* Floats & integers, negative and positive numbers\n* basic operations (`+`, `-`, `/`, `*`) and power (`^`)\n* constants (`E`, `PI`)\n* some syntaxic sugar (e.g. `(…)(…)` instead of `(…)*(…)`), various alternatives\n  for some operations (e.g. `⋅` or `×` instead of `*`, `÷` instead of `/`).\n\n\nIn the future, FormulaJS will be able to handle unknow variables and more\nfunctions (log, cos/sin/tan, etc).\n\nFormula Examples\n----------------\n\n```\n-2+3\n((42-5)(12*3+2))^3\n3.1415*18\n```\n",
  "readmeFilename": "README.md",
  "_id": "formula@0.0.2-beta2",
  "_from": "formula@*"
}
